# Project metadata
modules = ["nodejs-20", "web", "postgresql-16"]
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist", ".env*"]

# Environment configuration
[env]
NODE_ENV = "production"
PORT = "5000"

# Nix configuration
[nix]
channel = "stable-24_05"
packages = ["postgresql16", "nodejs-20"]

# Deployment settings
[deployment]
deploymentTarget = "autoscale"
build = ["npm", "install", "--production=false", "&&", "npm", "run", "build"]
run = ["npm", "run", "start"]
healthCheckPath = "/health"
minInstances = 1
maxInstances = 3

# Port configuration
[[ports]]
localPort = 5000
externalPort = 80
protocol = "http"

# Database configuration
[database]
type = "postgresql"
version = "16"
autoBackups = true
backupRetentionDays = 7

# Workflow definitions
[workflows]
defaultWorkflow = "dev"

[[workflows.workflow]]
name = "dev"
description = "Development workflow"
mode = "parallel"

[[workflows.workflow.tasks]]
name = "start-server"
command = "npm run dev"
waitForPort = 5000
timeout = "5m"

[[workflows.workflow.tasks]]
name = "run-migrations"
command = "npm run db:migrate"
when = "after-start"

[[workflows.workflow]]
name = "test"
description = "Run test suite"

[[workflows.workflow.tasks]]
name = "unit-tests"
command = "npm test"

[[workflows.workflow.tasks]]
name = "e2e-tests"
command = "npm run test:e2e"

# Monitoring configuration
[monitoring]
enabled = true
metricsPath = "/metrics"
alertRules = [
  { alert = "HighCPU", expr = "process_cpu_usage > 80", for = "5m" },
  { alert = "HighMemory", expr = "process_memory_usage > 85%", for = "10m" }
]
